@page "/profile/{id}"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Profile</PageTitle>
<head>
    <link href="css/landing.css" rel="stylesheet" />
    <link href="css/Profile.css" rel="stylesheet" />
</head>

<body>
    <div class="profilearea">
        <div class="profiletop">
            @user.Name's store
        </div>
        
        <div class="profileinformation">
            <div class="profileinformation-left">
                <div class="image-container">
                    <img src="@user.profilepicture" alt="https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png" class="profilepic">
                </div>
                <div class="rating">
                    Rating
                </div>
            </div>
            <div class="profileinformation-center">
                <div>About Myself</div>
                <div>@user.Description</div>
            </div>
            <div class="profileinformation-right">
                <img class="profileoption" src="https://cdn-icons-png.flaticon.com/512/7606/7606176.png" />
            </div>
            
        </div>
    </div>

    <div class="Featured_grid">
        @if (products != null)
        {
            @foreach (var product in products)
            {
                @if (product.UserId == id)
                {
                    <a href="/product/listed/@product.Id" class="Featured">
                        <div class="product_imgrow">
                        <img class="product_img" src="@product.imagepath">
                    </div>

                    <div class="product_info">
                        <p class="product_name">@product.Name</p>
                        <p class="product_price">$@product.price</p>
                    </div>
                    </a>
                }
            }
        }
    </div>
    
</body>

@code {
    [Parameter] public string id { get; set; }

    private List<Product>? products;

    User? user = new User();

    protected override async Task OnInitializedAsync()
    {
        products = await _client.GetFromJsonAsync<List<Product>>(Endpoints.ProductsEndpoint);
        user = await _client.GetFromJsonAsync<User>($"{Endpoints.UsersEndpoint}/{id}");
    }
}

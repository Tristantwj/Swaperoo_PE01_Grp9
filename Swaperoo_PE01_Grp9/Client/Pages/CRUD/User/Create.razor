@page "/users/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime JSRuntime
@layout NoMenuLayout

<h3 class="card-title">Create New User</h3>
<hr />
<br />

<FormComponent ButtonText="Create User" user="user" OnValidSubmit="@CreateUser" />

@code {
    User user = new User();

    private async Task CreateUser()
    {
        if (string.IsNullOrWhiteSpace(user.Name))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter a user name.");
            return;
        }
        if (string.IsNullOrWhiteSpace(user.Region))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter a user region.");
            return;
        }
        if (string.IsNullOrWhiteSpace(user.Email))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter a user email.");
            return;
        }
        if (string.IsNullOrWhiteSpace(user.Description))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter a user description.");
            return;
        }
        try
        {
            await _client.PostAsJsonAsync(Endpoints.UsersEndpoint, user);
            _navManager.NavigateTo("/users/");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error updating category: {ex.Message}");
        }
    }

}
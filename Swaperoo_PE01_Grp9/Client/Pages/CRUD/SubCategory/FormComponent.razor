@inject HttpClient _client
@using Swaperoo_PE01_Grp9.Client.Components

<EditForm Model="@subCategory" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">



        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@subCategory.Name" class="form-control" />
                <ValidationMessage For="@(()=>subCategory.Name)" />
            </div>
        </div>


        <div class="form-group">
            <label>Category: </label>
            <div>
                <InputSelect @bind-Value="subCategory.CategoryId" class="form-control">
                    <option value="">-- Select Category --</option>
                    @if (Categorys != null)
                    {
                        @foreach (var category in Categorys)
                        {
                            <option value="@category.Id">@category.Id - @category.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>subCategory.CategoryId)"></ValidationMessage>
            </div>
        </div>

    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="subCategorys" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public SubCategory? subCategory { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Category>? Categorys;


    protected async override Task OnInitializedAsync()
    {
        Categorys = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategorysEndpoint}");
    }
}


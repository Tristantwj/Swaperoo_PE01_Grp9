@inject HttpClient _client
@using Swaperoo_PE01_Grp9.Client.Components

<EditForm Model="@chat" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Created Date: </label>
            <div>
                <InputDate @bind-Value="@chat.DateCreated" class="form-control" />
                <ValidationMessage For="@(() => chat.DateCreated)" />
            </div>
        </div>
        <div class="form-group">
            <label>Chat Id: </label>
            <div>
                <InputNumber @bind-Value="@chat.Id" class="form-control" />
                <ValidationMessage For="@(() => chat.Id)" />
            </div>
        </div>
        <div class="form-group">
            <label>Chat Name: </label>
            <div>
                <InputText @bind-Value="@chat.Name" class="form-control" />
                <ValidationMessage For="@(() => chat.Name)" />
            </div>
        </div>
        <div class="form-group">
            <label>Date Created: </label>
            <div>
                <InputDate @bind-Value="@chat.DateCreated" class="form-control" />
                <ValidationMessage For="@(() => chat.DateCreated)" />
            </div>
        </div>
        <div class="form-group">
            <label>Purchase: </label>
            <div>
                <InputSelect @bind-Value="chat.PurchaseId" class="form-control">
                    <option value="">-- Select Purchase --</option>
                    @if (Purchases != null)
                    {
                        foreach (var purchase in Purchases)
                        {
                            <option value="@purchase.Id">@purchase.PurchaseProduct.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => chat.PurchaseId)" />
            </div>
        </div>
        <div class="form-group">
            <label>Swap: </label>
            <div>
                <InputSelect @bind-Value="chat.SwapId" class="form-control">
                    <option value="">-- Select Swap --</option>
                    @if (Swaps != null)
                    {
                        foreach (var swap in Swaps)
                        {
                            <option value="@swap.Id">@swap.SwapProduct.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => chat.SwapId)" />
            </div>
        </div>
    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="chats" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Chat? chat { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private IList<Purchase>? Purchases;
    private IList<Swap>? Swaps;


    protected async override Task OnInitializedAsync()
    {
        Purchases = await _client.GetFromJsonAsync<List<Purchase>>($"{Endpoints.PurchasesEndpoint}");
        Swaps = await _client.GetFromJsonAsync<List<Swap>>($"{Endpoints.SwapsEndpoint}");
    }
}
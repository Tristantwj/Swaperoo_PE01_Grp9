@page "/chats/edit/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime JSRuntime
@layout NoMenuLayout

<h3>Edit Chats</h3>

<FormComponent ButtonText="Update" OnValidSubmit="EditChats" chat="chat" />

@code {
    [Parameter] public int id { get; set; }
    Chat? chat = new Chat();
    private IList<Purchase>? Purchases;
    private IList<Swap>? Swaps;

    protected async override Task OnParametersSetAsync()
    {
        chat = await _client.GetFromJsonAsync<Chat>($"{Endpoints.ChatsEndpoint}/{id}");
        Purchases = await _client.GetFromJsonAsync<List<Purchase>>($"{Endpoints.PurchasesEndpoint}");
        Swaps = await _client.GetFromJsonAsync<List<Swap>>($"{Endpoints.SwapsEndpoint}");

    }

    async Task EditChats()
    {
        if (string.IsNullOrWhiteSpace(chat.Name))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter a chat name.");
            return;
        }

        try
        {
            await _client.PutAsJsonAsync($"{Endpoints.CategorysEndpoint}/{id}", chat);
            _navManager.NavigateTo("/chats/");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error updating chat: {ex.Message}");
        }
    }

}

@inject HttpClient _client
@using Swaperoo_PE01_Grp9.Client.Components

<EditForm Model="@report" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">



        <div class="form-group">
            <label>Reported Product: </label>
            <div>
                <InputSelect @bind-Value="report.ReportedProductId" class="form-control">
                    @if (ReportProducts != null)
                    {
                        @foreach (var reportProduct in ReportProducts)
                        {
                            <option value="@reportProduct.Id">@reportProduct.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>report.ReportedProductId)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <label>Purchased Product: </label>
            <div>
                <InputSelect @bind-Value="report.ReporterUserId" class="form-control">
                    @if (ReporterUsers != null)
                    {
                        @foreach (var buyer in ReporterUsers)
                        {
                            <option value="@buyer.Id">@buyer.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>report.ReporterUserId)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group">
            <label>Purchased Product: </label>
            <div>
                <InputSelect @bind-Value="report.ReportedUserId" class="form-control">
                    @if (ReportedUsers != null)
                    {
                        @foreach (var seller in ReportedUsers)
                        {
                            <option value="@seller.Id">@seller.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>report.ReportedUserId)"></ValidationMessage>
            </div>
        </div>

    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="reports" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Report? report { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Product>? ReportProducts;
    private IList<User>? ReporterUsers;
    private IList<User>? ReportedUsers;


    protected async override Task OnInitializedAsync()
    {
        ReportProducts = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
        ReporterUsers = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
        ReportedUsers = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
        report.DateCreated = DateTime.Now;
    }
}


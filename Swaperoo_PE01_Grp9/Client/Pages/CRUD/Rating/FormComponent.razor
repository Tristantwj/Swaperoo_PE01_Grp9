@inject HttpClient _client
@using Swaperoo_PE01_Grp9.Client.Components

<EditForm Model="@rating" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group mb-4">
            <label>Rating Value: </label>
            <div>
                <InputSelect @bind-Value="@rating.RatingValue" class="form-control">
                <option value=""> -- Select Rating Value -- </option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                </InputSelect>
                <ValidationMessage For="@(() => rating.RatingValue)" />
            </div>
        </div>
        <div class="form-group mb-4">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="@rating.Description" class="form-control" />
                <ValidationMessage For="@(()=>rating.Description)" />
            </div>
        </div>
        <div class="form-group mb-4">
            <label>Created Date: </label>
            <div>
                <InputDate @bind-Value="@rating.DateCreated" class="form-control" />
                <ValidationMessage For="@(() => rating.DateCreated)" />
            </div>
        </div>
        <div class="form-group mb-4">
            <label>User: </label>
            <div>
                <InputSelect @bind-Value="rating.UserId" class="form-control">
                    @if (Users != null)
                    {
                        @foreach (var user in Users)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>rating.UserId)"></ValidationMessage>
            </div>
        </div>
        <div class="form-group mb-4">
            <label>Purchase: </label>
            <div>
                <InputSelect @bind-Value="rating.PurchaseId" class="form-control">
                    @if (Purchases != null)
                    {
                        @foreach (var purchase in Purchases)
                        {
                            <option value="@purchase.Id">@rating.Purchase</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>rating.PurchaseId)"></ValidationMessage>
            </div>
        </div>


    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="ratings" />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Rating? rating { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<User>? Users;
    private IList<Purchase>? Purchases;
    private IList<Swap>? Swaps;

    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
        Purchases = await _client.GetFromJsonAsync<List<Purchase>>($"{Endpoints.PurchasesEndpoint}");
        Swaps = await _client.GetFromJsonAsync<List<Swap>>($"{Endpoints.UsersEndpoint}");
    }
}

